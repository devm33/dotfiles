#vim:ft=bash

if [[ `uname` ==  'Linux' ]]
then
    alias p="prodaccess"
    alias gsutil='/google/data/ro/projects/cloud/bigstore/tools/gsutil.par'
else
    alias gssh="certstatus -ssh_cert_comment=corp/normal -q || gcert; ssh desk -t tmux a"
    alias p=gssh
fi

# git5
alias g5="git5"
alias g5e="git5 export"
alias g5s="git5 submit"
function git5_submit_msg {
    git5 submit -y -d "$*"
}
alias g5d=git5_submit_msg
function git5_send_all {
    git add -A
    git commit -m "$*"
    prodcertstatus -q || prodaccess
    git5 submit -y -d "$*"
}
alias g5a=git5_send_all

# g4
if [ -r /etc/bash_completion.d/g4d ]; then
    source /etc/bash_completion.d/g4d
    compdef '_files -W /google/src/cloud/devrajm' g4d
    export P4DIFF='vimdiff'
    alias g4D='g4 citc -d'
    compdef g4D=g4d
    function g4g {
        if [ -z "$1" ]; then
            return
        fi
        g4d $1
        g4 reopen
        opened=$(g4 opened | head -n1 | cut -d' ' -f1 | sed 's/^\/\/depot\///')
        if [ "$opened" ]; then
            cd ..
            cd $(dirname $opened)
        fi
    }
    compdef g4g=g4d
    alias g4dd=g4g
    compdef g4dd=g4d
fi
if [ -r /etc/bash_completion.d/p4 ]; then
    source /etc/bash_completion.d/p4
fi

# blaze
#cache-path must exist
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache

# flag tab completion for blaze binaries niiice
if [ -r /etc/bash_completion.d/flag_completion ]; then
    source /etc/bash_completion.d/flag_completion
fi
alias bb='blaze build'
alias br='blaze run'

# gsutil
function gsls {
    gsutil ls $1 gs://mps-storage/devrajm
}
function gsadd {
    if [ -z "$1" ]
    then
        echo 'Specifiy file to upload'
    fi
    safename=`echo $1 | sed -e "s/[^a-zA-Z0-9.~_-]/_/g"`
    gsutil -m -o 'GSUtil:parallel_composite_upload_threshold=157286400' cp $1 gs://mps-storage/devrajm/$safename
    gsutil acl ch -u 'AllUsers:R' "gs://mps-storage/devrajm/$safename"
    echo "https://storage.googleapis.com/mps-storage/devrajm/$safename"
}
alias gs+='gsadd'

function drive {
    DRIVE="$HOME/Google Drive/"
    if [ -z "$1" ]
    then
        echo 'Specify dir to move and link'
    else
        mv ./$1 $DRIVE
        ln -s $DRIVE$1 ./
    fi
}

# Note global doesnt work for zsh, have to use specified
# TODO readd once rebuilt

# Android studio

# Crow (Android emulator)
if [[ `uname` ==  'Linux' ]]
then
    fpath=(  /google/data/ro/teams/mobile_eng_prod/crow $fpath )
    autoload _crow
    compdef _crow /google/data/ro/teams/mobile_eng_prod/crow/crow.par
    alias crow=/google/data/ro/teams/mobile_eng_prod/crow/crow.par
fi

# Use adb.turbo when possible, otherwise use standard adb.
function adb() {
  EMU_DEPS=/google/data/ro/teams/mobile_eng_prod/emu/live/google3/
  ANDROID_SDK=${EMU_DEPS}/third_party/java/android/android_sdk_linux/
  EMU_SUPPORT=${EMU_DEPS}/tools/android/emulator/support/
  ANDROID_ADB=${ANDROID_SDK}/platform-tools/adb
  ANDROID_ADB=${ANDROID_ADB} $EMU_SUPPORT/adb.turbo "$@"
}

# Add the internal Android SDK to your PATH
export SDK_LOC=/google/data/ro/teams/as-with-blaze/android-sdk-linux
export PATH=${PATH}:${SDK_LOC}/tools:${SDK_LOC}/platform-tools

# mDialog

# mdialog scripts
if [ -d /usr/local/google/home/devrajm/code/src_mdialog/sandbox/shell_scripts ]
then
    export PATH="$PATH:/usr/local/google/home/devrajm/code/src_mdialog/sandbox/shell_scripts"
fi
